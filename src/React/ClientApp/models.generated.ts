//***************************************************************
//This code just called you a tool
//What I meant to say is that this code was generated by a tool
//so don't mess with it unless you're debugging
//subject to change without notice, might regenerate while you're reading, etc
//***************************************************************
export interface IApplicationSettingMessage  {
id? : number;
name? : string;
value? : string;
}
export interface IApplicationSettingQueryRequest  {
defaultSortMember? : string;
sortDirection? : string;
resetPaging? : boolean;
pageNumber? : number;
pageSize? : number;
sortMember? : string;
totalRecords? : number;
totalPages? : number;
}
export interface IApplicationSettingQueryResponse extends IResponse {
state? : IGridState;
data? : IApplicationSettingMessage[];
numberOfRowsEffected? : number;
isOk? : boolean;
hasLogicException? : boolean;
message? : string;
details? : INameValuePair[];
exception? : any;
}
export interface IGridState  {
pageNumber? : number;
pageSize? : number;
totalRecords? : number;
totalPages? : number;
sortMember? : string;
sortDirection? : string;
defaultSortMember? : string;
resetPaging? : boolean;
}
export interface INameValuePair  {
name? : string;
value? : string;
}
export interface IAppPrincipal  {
expiration? : Date;
refreshTime? : Date;
isAuthenticated? : boolean;
userName? : string;
userId? : number;
firstName? : string;
lastName? : string;
roles? : string[];
isAdmin? : boolean;
token? : string;
}
export interface IClientInfo  {
timeZoneOffsetInMinutes? : number;
}
export interface IEmptyRequest  {
}
export interface IErrorQueryRequest  {
searchText? : string;
defaultSortMember? : string;
sortDirection? : string;
resetPaging? : boolean;
pageNumber? : number;
pageSize? : number;
sortMember? : string;
totalRecords? : number;
totalPages? : number;
}
export interface IErrorQueryResponse extends IResponse {
state? : IGridState;
data? : IErrorMessage[];
numberOfRowsEffected? : number;
isOk? : boolean;
hasLogicException? : boolean;
message? : string;
details? : INameValuePair[];
exception? : any;
}
export interface IErrorMessage  {
id? : number;
creationDate? : Date;
type? : string;
message? : string;
user? : string;
}
export interface IIdRequest  {
id? : number;
}
export enum Lists  {
Role = 1,
Lists = 2,
SqlOperation = 3
}
export interface IListsRequest  {
includeInactive? : boolean;
lists? : Lists[];
}
export interface IListsResponse extends IResponse {
roles? : IListItem[];
lists? : IListItem[];
sqlOperations? : IListItem[];
numberOfRowsEffected? : number;
isOk? : boolean;
hasLogicException? : boolean;
message? : string;
details? : INameValuePair[];
exception? : any;
}
export interface IListItem  {
value? : number;
name? : string;
}
export interface IMobileErrorRequest  {
errorMsg? : string;
url? : string;
lineNumber? : string;
column? : string;
errorObject? : string;
}
export interface INewItemResponse extends IResponse {
newItemId? : number;
numberOfRowsEffected? : number;
isOk? : boolean;
hasLogicException? : boolean;
message? : string;
details? : INameValuePair[];
exception? : any;
}
export interface IResponse  {
numberOfRowsEffected? : number;
isOk? : boolean;
hasLogicException? : boolean;
message? : string;
details? : INameValuePair[];
exception? : any;
}
export interface IResponseOfApplicationSettingMessage extends IResponse {
data? : IApplicationSettingMessage;
numberOfRowsEffected? : number;
isOk? : boolean;
hasLogicException? : boolean;
message? : string;
details? : INameValuePair[];
exception? : any;
}
export interface IResponseOfUserDetail extends IResponse {
data? : IUserDetail;
numberOfRowsEffected? : number;
isOk? : boolean;
hasLogicException? : boolean;
message? : string;
details? : INameValuePair[];
exception? : any;
}
export interface IUserDetail  {
id? : number;
userName? : string;
clientId? : number;
firstName? : string;
lastName? : string;
lockoutEnabled? : boolean;
password? : string;
confirmPassword? : string;
roles? : IListItem[];
}
export interface IResponseOfErrorDetail extends IResponse {
data? : IErrorDetail;
numberOfRowsEffected? : number;
isOk? : boolean;
hasLogicException? : boolean;
message? : string;
details? : INameValuePair[];
exception? : any;
}
export interface IErrorDetail  {
details? : string;
host? : string;
url? : string;
items? : IGroupingOfNameValuePair[];
id? : number;
creationDate? : Date;
type? : string;
message? : string;
user? : string;
}
export interface IGroupingOfNameValuePair  {
name? : string;
id? : any;
data? : INameValuePair[];
}
export interface IResponseOfAppPrincipal extends IResponse {
data? : IAppPrincipal;
numberOfRowsEffected? : number;
isOk? : boolean;
hasLogicException? : boolean;
message? : string;
details? : INameValuePair[];
exception? : any;
}
export interface IUserQueryRequest  {
searchText? : string;
clientId? : number;
defaultSortMember? : string;
id? : number;
sortDirection? : string;
resetPaging? : boolean;
pageNumber? : number;
pageSize? : number;
sortMember? : string;
totalRecords? : number;
totalPages? : number;
}
export interface IUserQueryResponse extends IResponse {
state? : IGridState;
data? : IUserMessage[];
numberOfRowsEffected? : number;
isOk? : boolean;
hasLogicException? : boolean;
message? : string;
details? : INameValuePair[];
exception? : any;
}
export interface IUserMessage  {
id? : number;
userName? : string;
clientId? : number;
firstName? : string;
lastName? : string;
roles? : string;
}

