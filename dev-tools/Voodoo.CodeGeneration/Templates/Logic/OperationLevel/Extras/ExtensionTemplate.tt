<#@ template language="C#"  linePragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#foreach (var item in this.File.UsingStatements){#>
using <#=item#>;
<#}#>
 namespace <#=this.File.Namespace#>
 {
 
	public  static partial class <#=File.Type.Name#>Extensions
	{    

		<# if(File.HasContext) {#>
		public static <#=this.File.Type.Name#>Repository <#=this.File.Type.Name#>Repository(this <#=File.ContextName#> context)
        {
           return new <#=this.File.Type.Name#>Repository(context);
        }

		<#}#>


		<#foreach(var map in this.File.Mappings){#>
		public static <#=map.MessageTypeName#> To<#=map.MessageTypeName#>(this <#=map.ModelTypeName#> model)
        {
           var message = to<#=map.MessageTypeName#>(model, new <#=map.MessageTypeName#>());
		   return message;	
        }
		public static <#=map.ModelTypeName#> UpdateFrom(this  <#=map.ModelTypeName#> model, <#=map.MessageTypeName#> message)
        {
          return updateFrom<#=map.MessageTypeName#>(message, model);
		       
	    }
		<#}#>		
}                    
}                    


