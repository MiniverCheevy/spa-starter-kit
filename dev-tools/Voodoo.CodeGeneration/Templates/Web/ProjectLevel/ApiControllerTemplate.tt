<#@ template language="C#"  linePragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
//***************************************************************
//This code just called you a tool
//What I meant to say is that this code was generated by a tool
//so don't mess with it unless you're debugging
//subject to change without notice, might regenerate while you're reading, etc
//***************************************************************
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Authorization;

using Voodoo;
<#foreach (var item in this.File.UsingStatements){#>
using <#=item#>;
<#}#>
namespace <#= this.File.Namespace #>
{
<# foreach(var resource in this.File.Resources) {#>

    [Route("api/[controller]")]
	public class <#=resource.Name#>Controller : ApiControllerBase
	{
		<# foreach(var verb in resource.Verbs) {#>
		<#if(verb.RoleString != null) {#>
		[CustomAuthorize(Roles = "<#=verb.RoleString#>")]
		<#}else if(verb.AllowAnonymous){#>
		[AllowAnonymous]<#}
		else{#>
		[CustomAuthorize]<#}#>
		<#=verb.Attribute#>
		public async Task<<#=verb.ResponseTypeName#>> <#=verb.Name#>
			(<#=verb.Parameter#> <#=verb.RequestTypeName#> request)
			{
			  if (request == null && ModelState.ErrorCount > 0)
                return ModelBinderResponseBuilder.BuildResponse<<#=verb.ResponseTypeName#>>(ModelState);

				var op = new <#=verb.OperationTypeName#>(request);
				var response = await op.ExecuteAsync();
				return response;
			}
<#}#>
	}

<#}#>
}