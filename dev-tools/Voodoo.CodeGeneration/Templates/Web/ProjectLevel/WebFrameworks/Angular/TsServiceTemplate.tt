<#@ template language="C#"  linePragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
/// <reference path="../messages.ts" />
/// <reference path="../../typings/angularjs/angular.d.ts" />
/// <reference path="../models.generated.ts" />
//***************************************************************
//This code just called you a tool
//What I meant to say is that this code was generated by a tool
//so don't mess with it unless you're debugging
//subject to change without notice, might regenerate while you're reading, etc
//***************************************************************
module Services 
{
	

	export class <#=File.Name #> 
	{

			static $inject = ['$http','$log']; 
			constructor(private $http: ng.IHttpService, private $log: ng.ILogService) 
			{
			}

			private urlBase:string = 'api/<#=File.TsName #>';			
			<# 
			
			foreach(var verb in File.Resource.Verbs) {
			var declarations = File.Builder.AddTypes(verb.RequestType, verb.ResponseType);#>

			<#=verb.Name.ToLower()#> (request: <#=declarations.RequestDeclaration#>): ng.IPromise<<#=declarations.ResponseDeclaration#>> 
			{
			<#if ( File.BodyVerbs.Contains(verb.Name.ToLower()) ) {#>
			var operation= this.$http.<#=verb.Name.ToLower()#>(this.urlBase,request );
			<#} else {#>
			var operation= this.$http({url: this.urlBase, method:'<#=verb.Name.ToLower()#>', params:request });		
			<#}#>

					return operation.then((response: IHttpResponse) => 
					{
						return response.data;
					},
					(response: IHttpResponse) => 
					{
						this.$log.error(response.data);
						this.$log.error(response.status);
						this.$log.error(response.headers);
						this.$log.error(response.config);
						var result: IResponse = {};
						result.isOk = false;
						result.message = response.statusTest;
						return result;
					});			
				}
		<#}#>
		}
		angular.module('app').service('<#=File.TsName #>', <#=File.Name#>);
}
