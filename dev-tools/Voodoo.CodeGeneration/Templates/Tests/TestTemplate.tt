<#@ template language="C#"  linePragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ template language="C#"  linePragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ template language="C#"  linePragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Cache;
using System.Text;
using System.Threading.Tasks;

using Voodoo;
using Voodoo.Messages;
using Voodoo.TestData;

<#foreach (var item in this.File.UsingStatements){#>
using <#=item#>; 
<#}#>
namespace <#=this.File.Namespace#>
{

    <#=this.File.Tests.ClassLevelAttribute#>
    public class <#=this.File.Name#> 
    {
         public static <#=this.File.Operation.RequestType.FullName#> GetRequest()
        {
            var request= new <#=this.File.Operation.RequestType.FullName#>();
			TestHelper.Randomizer.Randomize(request);
			return request;						
        }


		<#=this.File.Tests.TestLevelAttribute#>
		public static async Task ExecuteAsync_ValidRequest_IsOk()
        {
            var request= GetRequest();			
			var command = new <#=this.File.Operation.OperationTypeName#>(request);
            var response = await command.ExecuteAsync();

			response.IsOk.Should().BeTrue();
            response.Details.Should().BeEmpty();
            //response.Message.Should().Be(<#=this.File.Type.Name#>Messages.AddOk);            
		    //response.NewItemId.Should().NotBe(0);						
        }
    }
}
